name: Deploy to AWS Environment
on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set environment variable
        id: set_env
        run: |
          if [[ $GITHUB_REF_NAME == 'develop' ]]; then
            echo "ENV=dev" >> "$GITHUB_ENV"
            echo "env_name=dev" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF_NAME == 'release' ]]; then
            echo "ENV=qa" >> "$GITHUB_ENV"
            echo "env_name=qa" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF_NAME == 'main' ]]; then
            echo "ENV=prod" >> "$GITHUB_ENV"
            echo "env_name=prod" >> "$GITHUB_OUTPUT"
          else
            echo "ENV=dev" >> "$GITHUB_ENV"
            echo "env_name=dev" >> "$GITHUB_OUTPUT"
          fi
      
      # Write AWS account ID to a file
      - name: Write AWS account ID to file
        run: |
          mkdir -p ./config
          if [[ "${{ env.ENV }}" == "dev" ]]; then
            echo "${{ secrets.DEV_AWS_ACCOUNT_ID }}" > ./config/aws_account_id.txt
          elif [[ "${{ env.ENV }}" == "qa" ]]; then
            echo "${{ secrets.QA_AWS_ACCOUNT_ID }}" > ./config/aws_account_id.txt
          elif [[ "${{ env.ENV }}" == "prod" ]]; then
            echo "${{ secrets.PROD_AWS_ACCOUNT_ID }}" > ./config/aws_account_id.txt
          else
            echo "${{ secrets.DEV_AWS_ACCOUNT_ID }}" > ./config/aws_account_id.txt
          fi
          
          # Verify file was created (don't show content)
          if [[ -s ./config/aws_account_id.txt ]]; then
            echo "✓ AWS Account ID file created successfully"
          else
            echo "✗ ERROR: AWS Account ID file is empty!"
          fi
      
      # Upload the file as an artifact
      - name: Upload AWS account ID
        uses: actions/upload-artifact@v4
        with:
          name: aws-config
          path: ./config/aws_account_id.txt
          retention-days: 1
  
  build:
    needs: set-environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Download the artifact
      - name: Download AWS account ID
        uses: actions/download-artifact@v4
        with:
          name: aws-config
          path: ./config
      
      - name: Build with environment variables
        run: |
          echo "Building for environment: ${{ needs.set-environment.outputs.env_name }}"
          if [[ -s ./config/aws_account_id.txt ]]; then
            echo "✓ AWS Account ID file exists and is not empty"
          else
            echo "✗ ERROR: AWS Account ID file is missing or empty!"
          fi
  
  deploy:
    needs: [set-environment, build]
    runs-on: ubuntu-latest
    
    steps:
      # Download the artifact
      - name: Download AWS account ID
        uses: actions/download-artifact@v4
        with:
          name: aws-config
          path: ./config
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::$(cat ./config/aws_account_id.txt):role/Github_Action_Role
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to AWS
        run: |
          echo "Deploying to ${{ needs.set-environment.outputs.env_name }} environment"
          echo "AWS Account ID file exists: $(test -f ./config/aws_account_id.txt && echo 'Yes' || echo 'No')"
