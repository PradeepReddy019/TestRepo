name: Deploy to AWS Environment
on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}
      aws_account_id: ${{ steps.export_account.outputs.account_id }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set environment variable
        id: set_env
        run: |
          if [[ $GITHUB_REF_NAME == 'develop' ]]; then
            echo "ENV=dev" >> "$GITHUB_ENV"
            echo "env_name=dev" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF_NAME == 'release' ]]; then
            echo "ENV=qa" >> "$GITHUB_ENV"
            echo "env_name=qa" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF_NAME == 'main' ]]; then
            echo "ENV=prod" >> "$GITHUB_ENV"
            echo "env_name=prod" >> "$GITHUB_OUTPUT"
          else
            echo "ENV=dev" >> "$GITHUB_ENV"
            echo "env_name=dev" >> "$GITHUB_OUTPUT"
          fi
          
      # Using a separate step with explicit output
      - name: Export AWS account ID
        id: export_account
        shell: bash
        env:
          DEV_ACCOUNT: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
          QA_ACCOUNT: ${{ secrets.QA_AWS_ACCOUNT_ID }}
          PROD_ACCOUNT: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
        run: |
          # Determine which account to use
          if [[ "${{ env.ENV }}" == "dev" ]]; then
            echo "account_id=$DEV_ACCOUNT" >> $GITHUB_OUTPUT
          elif [[ "${{ env.ENV }}" == "qa" ]]; then
            echo "account_id=$QA_ACCOUNT" >> $GITHUB_OUTPUT
          elif [[ "${{ env.ENV }}" == "prod" ]]; then
            echo "account_id=$PROD_ACCOUNT" >> $GITHUB_OUTPUT
          else
            echo "account_id=$DEV_ACCOUNT" >> $GITHUB_OUTPUT
          fi
          
          # Verify output variable exists but don't print the actual value
          echo "AWS Account ID has been set to output"
          
  build:
    needs: set-environment
    runs-on: ubuntu-latest
    env:
      # Explicitly set environment variables from previous job
      ENV_NAME: ${{ needs.set-environment.outputs.env_name }}
      AWS_ACCOUNT: ${{ needs.set-environment.outputs.aws_account_id }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Debug received values
        run: |
          echo "Building for environment: $ENV_NAME"
          if [[ -n "$AWS_ACCOUNT" ]]; then
            echo "✓ AWS Account ID is properly received"
          else
            echo "✗ ERROR: AWS Account ID is empty or not received!"
          fi
      
  deploy:
    needs: [set-environment, build]
    runs-on: ubuntu-latest
    env:
      # Set environment variables again in this job
      ENV_NAME: ${{ needs.set-environment.outputs.env_name }}
      AWS_ACCOUNT: ${{ needs.set-environment.outputs.aws_account_id }}
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/Github_Action_Role
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to AWS
        run: |
          echo "Deploying to $ENV_NAME environment"
          # Add your deployment commands here
